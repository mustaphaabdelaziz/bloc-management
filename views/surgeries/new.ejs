<% layout('layouts/boilerplate') %>
<div class="row justify-content-center">
  <div class="col-lg-10">
    <div class="card">
      <div class="card-header bg-primary text-white">
        <h5 class="mb-0">
          <i class="bi bi-plus-circle me-2"></i>Nouvelle Chirurgie
        </h5>
      </div>
      <div class="card-body">
        <form method="POST" action="/surgeries" id="surgeryForm" onsubmit="return validateSurgeryForm()">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="patient" class="form-label">Patient *</label>
                <input type="text" class="form-control" id="patient" name="patientName" list="patientsList" placeholder="Rechercher et sélectionner un patient..." required autocomplete="off">
                <input type="hidden" name="patient" id="patientId">
                <datalist id="patientsList">
                  <% patients.forEach(patient => { %>
                    <option value="<%= patient.firstName %> <%= patient.lastName %> - <%= patient.code %>" data-id="<%= patient._id %>">
                  <% }); %>
                </datalist>
                <div class="form-text">
                  <a href="/patients/new" target="_blank" class="text-primary">
                    <i class="bi bi-plus-circle me-1"></i>Ajouter un nouveau patient
                  </a>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="surgeon" class="form-label">Chirurgien *</label>
                <input type="text" class="form-control" id="surgeon" name="surgeonName" list="surgeonsList" placeholder="Rechercher et sélectionner un chirurgien..." required autocomplete="off">
                <input type="hidden" name="surgeon" id="surgeonId">
                <datalist id="surgeonsList">
                  <% surgeons.forEach(surgeon => { %>
                    <option value="Dr. <%= surgeon.firstName %> <%= surgeon.lastName %> - <%= surgeon.specialty.name %>"
                            data-id="<%= surgeon._id %>"
                            data-specialty="<%= surgeon.specialty._id %>"
                            data-contract="<%= surgeon.contractType %>">
                  <% }); %>
                </datalist>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="prestation" class="form-label">Prestation *</label>
                <select class="form-select" id="prestation" name="prestation" required>
                  <option value="">Choisir une prestation...</option>
                  <% prestations.forEach(prestation => { %>
                    <option 
                      value="<%= prestation._id %>" 
                      data-specialty="<%= prestation.specialty._id %>" 
                      data-duration="<%= prestation.duration %>" 
                      data-price="<%= prestation.priceHT %>">
                        <%= prestation.designation %> - <%= prestation.specialty.name %> (<%= prestation.duration %> min)
                    </option>
                  <% }); %>
                </select>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="status" class="form-label">Statut *</label>
                <select name="status" id="status" class="form-select" required>
                  <option value="planned" <%= surgery.status === 'planned' ? 'selected' : '' %>>Planifiée</option>
                  <option value="urgent" <%= surgery.status === 'urgent' ? 'selected' : '' %>>Urgente</option>
                  <option value="in-progress" <%= surgery.status === 'in-progress' ? 'selected' : '' %>>En cours</option>
                  <option value="completed" <%= surgery.status === 'completed' ? 'selected' : '' %>>Terminée</option>
                </select>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="beginDateTime" class="form-label">Date et heure de début *</label>
                <input type="datetime-local" class="form-control" id="beginDateTime" name="beginDateTime"
                  value="<%= surgery.beginDateTime ? moment(surgery.beginDateTime).format('YYYY-MM-DDTHH:mm') : '' %>" required>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="endDateTime" class="form-label">Date et heure de fin</label>
                <input type="datetime-local" class="form-control" id="endDateTime" name="endDateTime"
                  value="<%= surgery.endDateTime ? moment(surgery.endDateTime).format('YYYY-MM-DDTHH:mm') : '' %>">
                <div class="form-text">Si renseigné, permettra le calcul de la durée réelle</div>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-12">
              <div class="mb-3">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="applyExtraFees" name="applyExtraFees" <%= surgery.applyExtraFees ? 'checked' : '' %>>
                  <label class="form-check-label" for="applyExtraFees">
                    <strong>Appliquer des frais supplémentaires pour dépassement de durée</strong>
                  </label>
                </div>
                <div class="form-text text-warning">
                  <i class="bi bi-info-circle me-1"></i>
                  Si la durée dépasse celle prévue pour la prestation, des frais additionnels peuvent être appliqués.
                </div>
              </div>
            </div>
          </div>
          <div class="card mb-4">
            <div class="card-header bg-info text-white">
              <h6 class="mb-0"><i class="bi bi-people me-2"></i>Personnel Médical Impliqué</h6>
            </div>
            <div class="card-body">
              <div id="medicalStaffContainer">
                <% if (surgery.medicalStaff && surgery.medicalStaff.length > 0) { %>
                  <% surgery.medicalStaff.forEach((staff, index) => { %>
                    <div class="row mb-3 medical-staff-row">
                      <div class="col-md-5">
                        <select name="medicalStaff" class="form-select">
                          <option value="">Sélectionner personnel</option>
                          <% medicalStaff.forEach(ms => { %>
                            <option value="<%= ms._id %>" <%= staff.staff.toString() === ms._id.toString() ? 'selected' : '' %>><%= ms.firstName %> <%= ms.lastName %></option>
                          <% }); %>
                        </select>
                      </div>
                      <div class="col-md-5">
                        <select name="rolePlayedId" class="form-select">
                          <option value="">Sélectionner rôle</option>
                          <% fonctions.forEach(fonction => { %>
                            <option value="<%= fonction._id %>" <%= staff.rolePlayedId.toString() === fonction._id.toString() ? 'selected' : '' %>><%= fonction.name %></option>
                          <% }); %>
                        </select>
                      </div>
                      <div class="col-md-2">
                        <button type="button" class="btn btn-outline-danger" onclick="removeStaffRow(this)">
                          <i class="bi bi-trash"></i>
                        </button>
                      </div>
                    </div>
                  <% }); %>
                <% } else { %>
                  <div class="row mb-3 medical-staff-row">
                    <div class="col-md-5">
                      <select name="medicalStaff" class="form-select">
                        <option value="">Sélectionner personnel</option>
                        <% medicalStaff.forEach(ms => { %>
                          <option value="<%= ms._id %>"><%= ms.firstName %> <%= ms.lastName %></option>
                        <% }); %>
                      </select>
                    </div>
                    <div class="col-md-5">
                      <select name="rolePlayedId" class="form-select">
                        <option value="">Sélectionner rôle</option>
                        <% fonctions.forEach(fonction => { %>
                          <option value="<%= fonction._id %>"><%= fonction.name %></option>
                        <% }); %>
                      </select>
                    </div>
                    <div class="col-md-2">
                      <button type="button" class="btn btn-outline-danger" onclick="removeStaffRow(this)">
                        <i class="bi bi-trash"></i>
                      </button>
                    </div>
                  </div>
                <% } %>
              </div>
              <button type="button" class="btn btn-outline-primary btn-sm" onclick="addStaffRow()">
                <i class="bi bi-plus-circle me-2"></i>Ajouter personnel
              </button>
            </div>
          </div>
          <div class="card mb-4">
            <div class="card-header bg-warning text-dark">
              <h6 class="mb-0"><i class="bi bi-box me-2"></i>Matériaux Consommés</h6>
            </div>
            <div class="card-body">
              <div id="materialsContainer">
                <div class="row mb-3 material-row">
                  <div class="col-md-6">
                    <select class="form-select" name="materialId" required>
                      <option value="">Choisir un matériau...</option>
                      <% materials.forEach(mat => { %>
                        <option
                          value="<%= mat._id %>"
                          data-specialty="<%= mat.specialty ? mat.specialty._id : '' %>"
                          data-category="<%= mat.category %>"
                          data-price="<%= mat.priceHT %>"
                          data-unit="<%= mat.unitOfMeasure %>">
                          <%= mat.designation %> - <%= mat.category === 'consumable' ? 'Consommable' : 'Patient' %> (Stock: <%= mat.stock %> <%= mat.unitOfMeasure %>)
                        </option>
                      <% }) %>
                    </select>
                  </div>
                  <div class="col-md-4">
                    <input type="number" name="materialQuantity" class="form-control" min="1" step="0.01" placeholder="Quantité" required>
                  </div>
                  <div class="col-md-2">
                    <button type="button" class="btn btn-outline-danger" onclick="removeMaterialRow(this)">
                      <i class="bi bi-trash"></i>
                    </button>
                  </div>
                </div>
              </div>
              <button type="button" class="btn btn-outline-primary btn-sm" onclick="addMaterialRow()">
                <i class="bi bi-plus-circle me-2"></i>Ajouter matériau
              </button>
            </div>
          </div>
          <div class="mb-3">
            <label for="notes" class="form-label">Notes et observations</label>
            <textarea class="form-control" id="notes" name="notes" rows="3"><%= surgery.notes || '' %></textarea>
          </div>
          <div class="d-flex justify-content-between">
            <a href="/surgeries" class="btn btn-secondary">
              <i class="bi bi-arrow-left me-2"></i>Retour
            </a>
            <button type="submit" class="btn btn-primary">
              <i class="bi bi-save me-2"></i>Enregistrer Chirurgie
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
// STRICT specialty filter: only show materials with exact same specialty as surgeon
function filterMaterialsBySpecialty(specialtyId) {
  document.querySelectorAll('#materialsContainer select[name="materialId"]').forEach(select => {
    const options = select.querySelectorAll('option');
    options.forEach((option, idx) => {
      if (idx === 0) return option.hidden = false;  // always show placeholder
      const optionSpecialty = option.getAttribute('data-specialty');
      option.hidden = optionSpecialty !== specialtyId;
    });
    // Reset selection if selection is not visible
    if (select.value) {
      const selectedOpt = select.selectedOptions[0];
      if (selectedOpt && selectedOpt.hidden) {
        select.value = '';
      }
    }
  });
}

function filterPrestationsBySpecialty(specialtyId) {
  const prestationSelect = document.getElementById('prestation');
  if (!prestationSelect) return;
  const options = prestationSelect.querySelectorAll('option');
  options.forEach((option, idx) => {
    if (idx === 0) return option.hidden = false;
    option.hidden = option.getAttribute('data-specialty') !== specialtyId;
  });
  if (prestationSelect.value) {
    const selectedOption = prestationSelect.selectedOptions[0];
    if (selectedOption && selectedOption.hidden) {
      prestationSelect.value = '';
    }
  }
}

document.addEventListener('DOMContentLoaded', function() {
  const surgeonInput = document.getElementById('surgeon');
  function getSelectedSpecialty() {
    return surgeonInput.getAttribute('data-selected-specialty') || '';
  }
  function applySpecialtyFilter() {
    const specialtyId = getSelectedSpecialty();
    filterPrestationsBySpecialty(specialtyId);
    filterMaterialsBySpecialty(specialtyId);
  }
  surgeonInput.addEventListener('input', applySpecialtyFilter);
  surgeonInput.addEventListener('change', applySpecialtyFilter);
  applySpecialtyFilter();
});

function addMaterialRow() {
  const container = document.getElementById('materialsContainer');
  if (!container) return;
  const newRow = document.createElement('div');
  newRow.className = 'row mb-3 material-row';
  newRow.innerHTML = `
    <div class="col-md-6">
      <select class="form-select" name="materialId" required>
        <option value="">Choisir un matériau...</option>
        <% materials.forEach(mat => { %>
          <option
            value="<%= mat._id %>"
            data-specialty="<%= mat.specialty ? mat.specialty._id : '' %>"
            data-category="<%= mat.category %>"
            data-price="<%= mat.priceHT %>"
            data-unit="<%= mat.unitOfMeasure %>">
            <%= mat.designation %> - <%= mat.category === 'consumable' ? 'Consommable' : 'Patient' %> (Stock: <%= mat.stock %> <%= mat.unitOfMeasure %>)
          </option>
        <% }) %>
      </select>
    </div>
    <div class="col-md-4">
      <input type="number" name="materialQuantity" class="form-control" min="1" step="0.01" placeholder="Quantité" required>
    </div>
    <div class="col-md-2">
      <button type="button" class="btn btn-outline-danger" onclick="removeMaterialRow(this)">
        <i class="bi bi-trash"></i>
      </button>
    </div>
  `;
  container.appendChild(newRow);
  const surgeonInput = document.getElementById('surgeon');
  let specialtyId = '';
  if (surgeonInput) {
    specialtyId = surgeonInput.getAttribute('data-selected-specialty') || '';
  }
  filterMaterialsBySpecialty(specialtyId);
}
function removeMaterialRow(button) {
  const row = button.closest('.material-row');
  if (row && document.querySelectorAll('.material-row').length > 1) {
    row.remove();
  }
}

function addStaffRow() {
  const container = document.getElementById('medicalStaffContainer');
  if (!container) return;
  const newRow = document.createElement('div');
  newRow.className = 'row mb-3 medical-staff-row';
  newRow.innerHTML = `
    <div class="col-md-5">
      <select name="medicalStaff" class="form-select">
        <option value="">Sélectionner personnel</option>
        <% medicalStaff.forEach(ms => { %>
          <option value="<%= ms._id %>"><%= ms.firstName %> <%= ms.lastName %></option>
        <% }); %>
      </select>
    </div>
    <div class="col-md-5">
      <select name="rolePlayedId" class="form-select">
        <option value="">Sélectionner rôle</option>
        <% fonctions.forEach(fonction => { %>
          <option value="<%= fonction._id %>"><%= fonction.name %></option>
        <% }); %>
      </select>
    </div>
    <div class="col-md-2">
      <button type="button" class="btn btn-outline-danger" onclick="removeStaffRow(this)">
        <i class="bi bi-trash"></i>
      </button>
    </div>
  `;
  container.appendChild(newRow);
}
function removeStaffRow(button) {
  const row = button.closest('.medical-staff-row');
  if (row && document.querySelectorAll('.medical-staff-row').length > 1) {
    row.remove();
  }
}

function validateSurgeryForm() {
  const patientInput = document.getElementById('patient');
  const patientIdInput = document.getElementById('patientId');
  const surgeonInput = document.getElementById('surgeon');
  const surgeonIdInput = document.getElementById('surgeonId');
  const prestationInput = document.getElementById('prestation');
  const beginDateTime = document.getElementById('beginDateTime');
  if (!patientInput.value || !patientIdInput.value) {
    alert('Veuillez sélectionner un patient valide.');
    patientInput.focus();
    return false;
  }
  if (!surgeonInput.value || !surgeonIdInput.value) {
    alert('Veuillez sélectionner un chirurgien valide.');
    surgeonInput.focus();
    return false;
  }
  if (!prestationInput.value) {
    alert('Veuillez sélectionner une prestation valide.');
    prestationInput.focus();
    return false;
  }
  if (!beginDateTime.value) {
    alert('Veuillez saisir la date et l\'heure de début.');
    beginDateTime.focus();
    return false;
  }
  const now = new Date();
  const selectedDate = new Date(beginDateTime.value);
  if (selectedDate <= now) {
    alert('La date et l\'heure de début doivent être dans le futur.');
    beginDateTime.focus();
    return false;
  }
  const materialRows = document.querySelectorAll('.material-row');
  for (let row of materialRows) {
    const select = row.querySelector('select[name="materialId"]');
    const quantityInput = row.querySelector('input[name="materialQuantity"]');
    if (!select.value) {
      alert('Veuillez sélectionner un matériau valide.');
      select.focus();
      return false;
    }
    if (!quantityInput.value || quantityInput.value <= 0) {
      alert('Veuillez saisir une quantité valide pour le matériau.');
      quantityInput.focus();
      return false;
    }
  }
  return true;
}
// Link datalist selection to hidden input (and get specialty for surgeon)
document.addEventListener('DOMContentLoaded', function() {
  function datalistToHidden(inputId, listId, hiddenInputId, attr = 'data-id') {
    const input = document.getElementById(inputId);
    const datalist = document.getElementById(listId);
    const hiddenInput = document.getElementById(hiddenInputId);
    input.addEventListener('input', function() {
      let val = input.value;
      let opts = datalist.options;
      for (let i=0; i<opts.length; i++) {
        if (opts[i].value === val) {
          hiddenInput.value = opts[i].getAttribute(attr);
          if (inputId === 'surgeon') {
            input.setAttribute('data-selected-specialty', opts[i].getAttribute('data-specialty'));
          }
          return;
        }
      }
      hiddenInput.value = '';
      if (inputId === 'surgeon') input.removeAttribute('data-selected-specialty');
    });
  }
  datalistToHidden('patient','patientsList','patientId');
  datalistToHidden('surgeon','surgeonsList','surgeonId');
});
</script>
